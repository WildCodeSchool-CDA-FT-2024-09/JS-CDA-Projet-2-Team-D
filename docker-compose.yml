services:
  db:
    image: postgres
    env_file: ./.env
    restart: always
    volumes:
      - ./api_data/db_import:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - 8080:8080
    container_name: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy

  api_data:
    build: ./api_data
    # command: npm run devseed
    command: npm run initdataset
    restart: always
    env_file: .env
    volumes:
      - ./api_data:/app/
    depends_on:
      db:
        condition: service_healthy

  # api_email:
  #   build: ./api_email
  #   command: npm run dev
  #   restart: always
  #   env_file: .env
  #   volumes:
  #     - ./api_email:/app/

  # api_upload:
  #   build: ./api_upload
  #   restart: always
  #   volumes:
  #     - ./api_upload/app:/var/www/html/app
  #     - ./api_upload/src:/var/www/html/src
  #     - ./api_upload/public:/var/www/html/public
  #     - ./api_upload/config:/var/www/html/config
  #     - ./api_upload/templates:/var/www/html/templates
  #     - ./api_upload/upload:/var/www/html/upload
  #   ports:
  #     - 8081:8100 # to be removed when going in prod
  #   depends_on:
  #     db:
  #       condition: service_healthy

  client:
    build: ./client
    command: npm run dev -- --host
    restart: always
    environment:
      - VITE_API_URL=http://localhost:7100/graph
    volumes:
      - ./client/src:/app/src
      - /app/node_modules

  reverse_proxy:
    image: nginx
    ports:
      - 7100:80
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - client
      - api_data
      # - api_email
      # - api_upload
