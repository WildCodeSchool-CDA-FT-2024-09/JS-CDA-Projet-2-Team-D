services:
  db:
    image: postgres
    env_file: ./.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - 8080:8080
    container_name: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy

  api_data:
    build: ./api_data
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        npm run seed
        npm run test
    restart: always
    env_file: .env
    volumes:
      - ./api_data:/app/
    depends_on:
      db:
        condition: service_healthy

  api_email:
    build: ./api_email
    command: npm run dev
    restart: always
    env_file: .env
    volumes:
      - ./api_email:/app/

  client:
    build: ./client
    command: npm run test
    restart: always
    environment:
      - VITE_API_URL=http://localhost:7000/graph
    volumes:
      - ./client:/app/

  reverse_proxy:
    image: nginx
    ports:
      - 7000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api_data
      - api_email
      - client
